// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  ADMIN
  WORKER
}

enum ActivityType {
  LOGIN
  LOGOUT
  ADD_STOCK
  UPDATE_STOCK
  DELETE_STOCK
  SALE
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(WORKER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sales     Sale[]
  logs      ActivityLog[]
}

model InventoryItem {
  id          String   @id @default(cuid())
  name        String
  category    String
  quantity    Int
  price       Float
  expiryDate  DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sales       Sale[]
}

model Sale {
  id         String         @id @default(cuid())
  item       InventoryItem  @relation(fields: [itemId], references: [id])
  itemId     String
  quantity   Int
  totalPrice Float
  createdAt  DateTime       @default(now())

  soldBy     User           @relation(fields: [userId], references: [id])
  userId     String
}

model ActivityLog {
  id        String       @id @default(cuid())
  type      ActivityType
  message   String
  createdAt DateTime     @default(now())

  user      User         @relation(fields: [userId], references: [id])
  userId    String
}