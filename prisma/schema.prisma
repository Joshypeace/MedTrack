generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id        String        @id @default(cuid())
  email     String        @unique
  password  String
  name      String
  role      Role          @default(ADMIN)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  logs      ActivityLog[]
  sales     Sale[]
  pharmacy  Pharmacy?     @relation(fields: [pharmacyId], references: [id])
  pharmacyId String?
}

model Pharmacy {
  id            String    @id @default(cuid())
  name          String    @unique
  licenseNumber String    @unique
  ownerName     String
  email         String    @unique
  phone         String
  location      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  users         User[]
}

model InventoryItem {
  id         String    @id @default(cuid())
  name       String
  category   String
  quantity   Int
  price      Float
  expiryDate DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  batch      String?
  sales      Sale[]
}

model Sale {
  id         String        @id @default(cuid())
  itemId     String
  quantity   Int
  totalPrice Float
  createdAt  DateTime      @default(now())
  userId     String
  item       InventoryItem @relation(fields: [itemId], references: [id])
  soldBy     User          @relation(fields: [userId], references: [id])
}

model ActivityLog {
  id        String       @id @default(cuid())
  type      ActivityType
  message   String
  createdAt DateTime     @default(now())
  userId    String
  user      User         @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  WORKER
}

enum ActivityType {
  LOGIN
  LOGOUT
  ADD_STOCK
  UPDATE_STOCK
  DELETE_STOCK
  SALE
}
